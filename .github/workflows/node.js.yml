# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm i
    - run: npm run build --if-present
    - run: npm run test-ci
  
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        # with:
        #   path: ~/.npm
        #   key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        #   restore-keys: |
        #     ${{ runner.os }}-node-
            
      - run: npm i
      - run: npm run build-prod
      # - uses: ./
      #   id: vercel-action-staging
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
      #     working-directory: dist
          # alias-domains: |
          #   staging.angular.vercel-action.amond.dev
          #   pr-{{PR_NUMBER}}.angular.vercel-action.amond.dev
      # - uses: ./
      - uses: amondnet/vercel-action@v20
        id: vercel-action-production
        if: github.event_name == 'push'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT }}
          working-directory: dist
          vercel-args: '--prod '